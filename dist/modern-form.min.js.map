{"version":3,"sources":["modern-form.js"],"names":["inputFocus","this","element","parentNode","classList","add","plugin","options","classHasFocus","classHasContent","onFocus","inputBlur","value","remove","onBlur","extendDefaults","source","properties","property","hasOwnProperty","build","list","slice","call","input","forEach","addEventListener","bind","ModernForm","defaults","inputSelector","form","arguments","prototype","init","querySelectorAll"],"mappings":";;;;;;CAMA,WA+BI,QAASA,KACLC,KAAKC,QAAQC,WAAWC,UAAUC,IAAIJ,KAAKK,OAAOC,QAAQC,eAC1DP,KAAKC,QAAQC,WAAWC,UAAUC,IAAIJ,KAAKK,OAAOC,QAAQE,iBAC1DR,KAAKK,OAAOC,QAAQG,QAMxB,QAASC,KACD,KAAOV,KAAKC,QAAQU,OACpBX,KAAKC,QAAQC,WAAWC,UAAUS,OAAOZ,KAAKK,OAAOC,QAAQE,iBAEjER,KAAKC,QAAQC,WAAWC,UAAUS,OAAOZ,KAAKK,OAAOC,QAAQC,eAC7DP,KAAKK,OAAOC,QAAQO,OAMxB,QAASC,GAAeC,EAAQC,GAC5B,GAAIC,EAEJ,KAAKA,IAAYD,GACTA,EAAWE,eAAeD,KAC1BF,EAAOE,GAAYD,EAAWC,GAItC,OAAOF,GAQX,QAASI,KACL,GAAIC,MAAUC,MAAMC,KAAKtB,KAAKuB,OAC1BlB,EAASL,IAEboB,GAAKI,QAAQ,SAASvB,GACd,KAAOA,EAAQU,OACfV,EAAQC,WAAWC,UAAUC,IAAIC,EAAOC,QAAQE,iBAGhDP,IACAA,EAAQwB,iBAAiB,QAAS1B,EAAW2B,MAAOzB,QAASA,EAASI,OAAQA,KAC9EJ,EAAQwB,iBAAiB,OAAQf,EAAUgB,MAAOzB,QAASA,EAASI,OAAQA,QA7ExFL,KAAK2B,WAAa,WACd,GAAIC,IACAC,cAAe,cACftB,cAAe,wBACfC,gBAAiB,0BACjBC,QAAS,KACTI,OAAQ,KAGZb,MAAK8B,KAAO,KACZ9B,KAAKuB,MAAQ,KACbvB,KAAKM,QAAUQ,EAAec,EAAUG,UAAU,KAOtDJ,WAAWK,UAAUC,KAAO,SAAShC,GACjCD,KAAK8B,KAAO7B,EACZD,KAAKuB,MAAQtB,EAAQiC,iBAAiBlC,KAAKM,QAAQuB,eAEnDV,EAAMG,KAAKtB","file":"../js/modern-form.min.js","sourcesContent":["/*!\r\n * A simple handler for forms that add classes on your forms, so you can play with CSS.\r\n * Version : 1.1.2\r\n * Emmanuel B. (www.emmanuelbeziat.com)\r\n * https://github.com/EmmanuelBeziat/js-modern-form\r\n **/\r\n(function() {\r\n\r\n    this.ModernForm = function() {\r\n        var defaults = {\r\n            inputSelector: '.form-input',\r\n            classHasFocus: 'form-group--has-focus',\r\n            classHasContent: 'form-group--has-content',\r\n            onFocus: null,\r\n            onBlur: null\r\n        };\r\n\r\n        this.form = null;\r\n        this.input = null;\r\n        this.options = extendDefaults(defaults, arguments[0]);\r\n    }\r\n\r\n    /**\r\n     * Main functino called by the plugin\r\n     * @param  {DOM object} element [The form to be set with the plugin]\r\n     */\r\n    ModernForm.prototype.init = function(element) {\r\n        this.form = element;\r\n        this.input = element.querySelectorAll(this.options.inputSelector);\r\n\r\n        build.call(this);\r\n    }\r\n\r\n    /**\r\n     * Add classes on the input when user gets in it\r\n     * Allow callback onFocus\r\n     */\r\n    function inputFocus() {\r\n        this.element.parentNode.classList.add(this.plugin.options.classHasFocus);\r\n        this.element.parentNode.classList.add(this.plugin.options.classHasContent);\r\n        this.plugin.options.onFocus;\r\n    }\r\n\r\n    /**\r\n     * Remove classes on the input when user leave it\r\n     */\r\n    function inputBlur() {\r\n        if ('' === this.element.value) {\r\n            this.element.parentNode.classList.remove(this.plugin.options.classHasContent);\r\n        }\r\n        this.element.parentNode.classList.remove(this.plugin.options.classHasFocus);\r\n        this.plugin.options.onBlur;\r\n    }\r\n\r\n    /**\r\n     * Extend defaults properties with user options\r\n     */\r\n    function extendDefaults(source, properties) {\r\n        var property;\r\n\r\n        for (property in properties) {\r\n            if (properties.hasOwnProperty(property)) {\r\n                source[property] = properties[property];\r\n            }\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Main build function\r\n     * 1. Add the content class when loading, if the input's value is already defined\r\n     * 2. Fire events when focus and blur happen\r\n     */\r\n    function build() {\r\n        var list = [].slice.call(this.input);\r\n        var plugin = this;\r\n\r\n        list.forEach(function(element) {\r\n            if ('' !== element.value) {\r\n                element.parentNode.classList.add(plugin.options.classHasContent); // [1]\r\n            }\r\n\r\n            if (element) {\r\n                element.addEventListener('focus', inputFocus.bind({ element: element, plugin: plugin })); // [2]\r\n                element.addEventListener('blur', inputBlur.bind({ element: element, plugin: plugin })); // [2]\r\n            }\r\n        });\r\n    }\r\n\r\n})();"]}